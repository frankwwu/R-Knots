unset hidden3d
# set terminal pngcairo  transparent enhanced font "arial,10" fontscale 1.0 size 500, 350
# set output 'scatter.1.png'
set dummy u,v
set key inside right top vertical Right noreverse enhanced autotitles box linetype -1 linewidth 1.000
set parametric
set title "Simple demo of scatter data conversion to grid data"
set xlabel "data style point - no dgrid"
splot "hemisphr.dat"
x<-4L
x
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
z<-c(1, "s")
xx<-list(2,"a","b",TRUE)
xx[[2]]
x1<-xx[[2]]
x<-c(17, 14,4,5,13,12,10)
x[x>=11]<-4
install.packages("swirl")
library(swirl)
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
info()
z<-c(1.1,9.3.14)
z<-c(1.1,9,3.14)
z<-c(1.1,9,3.14)
z <- c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z <- c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
z
c(z, 555, z)
z*2+100
mySqrt<-(z-1)^2
mySqrt<-(z-1)^2
mySqrt <- sqrt(z - 1)
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+C(0,10,100)
c(1, 2, 3, 4) + c(0, 10, 100)
swirl()
1:20
pi:10
15:1
?':'
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, time=40)
rep(0, time = 40)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(0.5, 55, -10, 6)
num_vect<-c(0.5, 55, -10, 6)
tf<-num_vect < 1
tf
num_vect >= 6
c("My", "name", "is")
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Frank")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
my_data<-sample(c(y, z), 100)
myData<-sample(c(y, z), 100)
myNA<-is.na(myData)
myNA
myData==NA
sum(myData)
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) | x>0]
x[!is.na(x) & x>0]
c(x[3], x[5], x[7])
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vert<-c(foo=11, bar=2, norf=NA)
vect<-c(foo=11, bar=2, norf=NA)
vect
name(vect)
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
myVector<-c(1:20)
myVector<-1:20
myVector
dim(myVectro)
dim(myVector)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
? matrix
matrix(data=1:20, nrow=4, ncol=5)
myMatrix2<-matrix(data=1:20, nrow=4, ncol=5)
identical(matrix,matrix2)
identical(matrix,myMatrix2)
myMatrix2
?identical
identical(myMatrix, myMatrix2)
patents<-c("Bill","Gina","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData<-data.frame(patients, myMatrix)
myData
class(myData)
cnames<-c( "patient", "age", "weight", "bp", "rating", "test")
colnames(myData)<-cnames
myData
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
x
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
Sepal.Length
Sepal
?iris
library(datasets)
data(iris)
d<-data(iris)
d
aggregate(iris[,1:3], iris["virginica"], function(x) mean(x,na.rm=T))
aggregate(iris[,1:3], iris["Species"], function(x) mean(x,na.rm=T))
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
lapply(mtcars, mean)
h4<-mean(hp[cyl == 4])
names(mtcars)
mpg[cyl == 4]
tapply(mpg,cyl,mean)
mean(mtcars[mtcarscyl==4,]hp)
mtcars[mtcarscyl==4,]
mtcars[cyl==4,]
mtcars[mtcars,cyl==4,]
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
x<-with(mtcars, tapply(hp, cyl, mean))
x
x[1]
x[3]-x[1]
debug(ls)
ls
ls
library(nlme)
library(lattice)
xyploy(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
help(points)
help(lpoints)
help(text)
help(par)
help(splom)
super.sym <- trellis.par.get("superpose.symbol")
splom(~iris[1:4], groups = Species, data = iris,
panel = panel.superpose,
key = list(title = "Three Varieties of Iris",
columns = 3,
points = list(pch = super.sym$pch[1:3],
col = super.sym$col[1:3]),
text = list(c("Setosa", "Versicolor", "Virginica"))))
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot)
require(ggplot)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
help(xyplot)
help(xyplot)
class(xtplot)
class(xyplot)
str(xyplot)
g <- ggplot(movies, aes(votes, rating))
class(g)
str(g)
help(trellis)
class(trellis)
print.trellis()
library(lattice)
data()
data(packaage="cars")
cars
sleep
str(cars)
plot(cars)
barplot(cars)
barchart(cars)
lines(cars)
cars[cars.speed > 3,]
cars[cars$speed > 3,]
cars[1,1]
cars[1,]
cars[cars$speed>10,]
apply(cars, 1:2, mean)
apply(cars, 1, mean)
path<-"http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
x=read.fwf(file=url(path), skip=4, widths=c(12,7,4,9,4,9,4,9,4))
head(x)
x=read.fwf(file=url(path), skip=3, widths=c(12,7,4,9,4,9,4,9,4))
head(x)
x=read.fwf(file=url(path), skip=3, header=TRUE, widths=c(12,7,4,9,4,9,4,9,4))
x=read.fwf(file=url(path), skip=3, header=TRUE, sep='\t', widths=c(12,7,4,9,4,9,4,9,4))
x=read.fwf(file=url(path), skip=3, header=TRUE, sep='|', widths=c(12,7,4,9,4,9,4,9,4))
x=read.fwf(file=url(path), skip=3, header=TRUE, sep=' ', widths=c(12,7,4,9,4,9,4,9,4))
x=read.fwf(file=url(path), skip=4, header=TRUE, widths=c(12,7,4,9,4,9,4,9,4))
x=read.fwf(file=url(path), skip=4, widths=c(12,7,4,9,4,9,4,9,4))
head(x)
x0=read.fwf(file=url(path)
x0=read.fwf(file=url(path))
x0=read.fwf(file=url(path))
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 3, nrows=1)
head(d2)
d2 <- read.table(path, header = TRUE, stringsAsFactors = FALSE, skip = 3, nrows=1)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows=1)
head(d2)
str(d2)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows5)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows=5)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows=1)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4, nrows=5)
d2 <- read.table(path, header = FALSE, stringsAsFactors = FALSE, skip = 4)
str(x)
install.packages("nitr")
install.packages("knitr")
path<-"http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
df=read.fwf(file=url(path), skip=4, widths=c(12,7,4,9,4,9,4,9,4))
sum(df$V4)
head(df)
hist(df%V2)
plot(df%V1, df$V2)
qplot(df%V1, df$V2)
library(ggplot2)
qplot(df%V1, df$V2)
qplot(df, V1)
qplot(df, V1, V2)
plot(df)
c<-read.cvs(path)
c<-read.csv(path)
head(c)
setwd("C:\\Users\\Squiper\\Documents\\GitHub\\R-Knots\\Yahoo-Quote")
uri <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&a=0&b=2&c=2010&d=0&e=2&f=2014&g=m"
df$Date <- as.Date(df$Date, "%Y-%m-%d")
source("Yahoo_Quote.R")
Yahoo_Quote.R()
Yahoo_Quote()
plot(df$Date, df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
#df$Date <- as.Date(df$Date, "%Y-%m-%d")
uri <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&a=0&b=2&c=2010&d=0&e=2&f=2014&g=m"
df <- read.csv(uri)
df$Date <- as.Date(df$Date, "%Y-%m-%d")
plot(df$Date, df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
lines(df$Date, df$Adj.Close)
---
#convert the 'Date' from a string to a Date type
df$Date <- as.Date(df$Date, "%Y-%m-%d")
For Yahoo Fanance APIs, see https://code.google.com/p/yahoo-finance-managed/wiki/YahooFinanceAPIs
uri <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&a=0&b=2&c=2010&d=7&e=2&f=2014&g=m"
df <- read.csv(uri)
uri <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&a=0&b=2&c=2010&d=7&e=2&f=2014&g=m"
df <- read.csv(uri)
#convert the 'Date' from a string to a Date type
df$Date <- as.Date(df$Date, "%Y-%m-%d")
plot(df$Date, df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
lines(df$Date, df$Adj.Close)
uri <- "http://ichart.finance.yahoo.com/table.csv?s=AAPL&a=0&b=2&c=2010&d=6&e=2&f=2014&g=m"
df <- read.csv(uri)
#convert the 'Date' from a string to a Date type
df$Date <- as.Date(df$Date, "%Y-%m-%d")
plot(df$Date, df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
lines(df$Date, df$Adj.Close)
plot(df$Date, type="l", df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
lines(lowess(df, f=.2), col = 2)
axis(1, 1:length(df), dat.all)
axis(1, 1:length(df))
lines(lowess(df, f=.2), col = 2)
plot(df$Date, df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
lines(df$Date, df$Adj.Close)
plot(df$Date, type="l", df$Adj.Close, ylab="$", xlab="Year", ylim=c(0, 100))
